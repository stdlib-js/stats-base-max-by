// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-stride2offset@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-positive-zero@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@v0.2.1-esm/index.mjs";function n(r,e,n,a,o,d){var l,f,m,c,v;if(r<=0)return NaN;if((m=i(e)).accessorProtocol)return function(r,e,i,n,a,o){var d,l,f,m,c,v;if(d=e.data,l=e.accessors[0],1===r||0===i)return void 0===(c=a.call(o,l(d,n),0,n,d))?NaN:c;for(m=n,v=0;v<r&&void 0===(f=a.call(o,l(d,m),v,m,d));v++)m+=i;if(v===r)return NaN;for(v+=1;v<r;v++)if(m+=i,void 0!==(c=a.call(o,l(d,m),v,m,d))){if(t(c))return c;(c>f||c===f&&s(c))&&(f=c)}return f}(r,m,n,a,o,d);if(1===r||0===n)return void 0===(c=o.call(d,e[a],0,a,e))?NaN:c;for(f=a,v=0;v<r&&void 0===(l=o.call(d,e[f],v,f,e));v++)f+=n;if(v===r)return NaN;for(v+=1;v<r;v++)if(f+=n,void 0!==(c=o.call(d,e[f],v,f,e))){if(t(c))return c;(c>l||c===l&&s(c))&&(l=c)}return l}function a(r,t,s,i,a){return n(r,t,s,e(r,s),i,a)}r(a,"ndarray",n);export{a as default,n as ndarray};
//# sourceMappingURL=index.mjs.map
